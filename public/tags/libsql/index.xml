<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Libsql on Meet Rajesh Gor</title>
    <link>http://localhost:1313/tags/libsql/</link>
    <description>Recent content in Libsql on Meet Rajesh Gor</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 31 Oct 2024 21:45:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/libsql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Use Embedded Replicas of LibSQL Database hosted on Turso with a Golang Application</title>
      <link>http://localhost:1313/turso-libsql-embedded-replicas-golang/</link>
      <pubDate>Thu, 31 Oct 2024 21:45:00 +0000</pubDate>
      <guid>http://localhost:1313/turso-libsql-embedded-replicas-golang/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Welcome to the Let&amp;rsquo;s Go with Turso series. In this series, we will learn how to interact with LibSQL databases with Golang. In the past article of the series, we explored how to connect remote/local LibSQL database in golang.&lt;/p&gt;&#xA;&lt;p&gt;With this section, we will specifally dive into understanding how to create, connect, and query local embedded replicas of LibSQL database hosted on Turso with a Golang application.&lt;/p&gt;&#xA;&lt;p&gt;If you want to check out the YouTube video, check this out:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Connect LibSQL Database hosted on Turso in a Golang Application</title>
      <link>http://localhost:1313/turso-libsql-db-golang/</link>
      <pubDate>Mon, 30 Sep 2024 23:45:00 +0000</pubDate>
      <guid>http://localhost:1313/turso-libsql-db-golang/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Welcome to the new series in Golang, Let&amp;rsquo;s Go with Turso. In this series, we will learn how to interact with LibSQL databases with Golang. We will connect with a remote/local LibSQL database, create Embedded replicas, set up a local LibSQL database, and so much more as we explore and find out more features of LibSQL.&lt;/p&gt;&#xA;&lt;h2 id=&#34;connect-a-libsql-database-in-a-golang-application&#34;&gt;Connect a LibSQL database in a Golang application&lt;/h2&gt;&#xA;&lt;p&gt;In this post, we will learn how to connect and query a LibSQL database hosted on Turso/Cloud in a Golang Application using libsql-client package. We will go from setting up golang project, installing turso-cli, creating a database on turso with the cli, connecting to the database with shell, and golang and finally, we can query the database using Golang.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Connecting LibSQL database with Python</title>
      <link>http://localhost:1313/libsql-python/</link>
      <pubDate>Thu, 30 Nov 2023 20:45:00 +0000</pubDate>
      <guid>http://localhost:1313/libsql-python/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;LibSQL is an &lt;strong&gt;Open Contribution&lt;/strong&gt; fork of SQLite. Open Contribution means that it allows suggestions and contributions from the community as opposed to SQLite which is open source but doesn&amp;rsquo;t accept community contributions.&lt;/p&gt;&#xA;&lt;h2 id=&#34;installation-of-libsql-clients&#34;&gt;Installation of LibSQL Client(s)&lt;/h2&gt;&#xA;&lt;p&gt;There are two libraries for LibSQL to interact with Python, the &lt;a href=&#34;https://github.com/libsql/libsql-client-py/&#34;&gt;libsql-client&lt;/a&gt; and the &lt;a href=&#34;https://github.com/libsql/libsql-experimental-python&#34;&gt;libsql-experimental-python&lt;/a&gt;. The former is the recommended client as it is stable, whereas the latter is in development and has the latest features from the libsql database engine, however, it is compatible with the &lt;a href=&#34;https://docs.python.org/3/library/sqlite3.html&#34;&gt;sqlite&lt;/a&gt; module.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
